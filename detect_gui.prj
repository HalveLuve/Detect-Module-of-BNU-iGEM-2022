<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration build-checksum="2061364208" file="C:\Users\10630\Documents\MATLAB\Detect\detect_gui.prj" location="C:\Users\10630\Documents\MATLAB\Detect" name="detect_gui" preferred-package-location="C:\Users\10630\Documents\MATLAB\Detect\detect_gui\for_redistribution" preferred-package-type="package.type.exe" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>detect_gui</param.appname>
    <param.icon />
    <param.icons />
    <param.version>2.2</param.version>
    <param.authnamewatermark>HalveLuve</param.authnamewatermark>
    <param.email>202011081001@mail.bnu.edu.cn</param.email>
    <param.company>Beijing Normal University</param.company>
    <param.summary>The GUI application for Detect Module @BNU-China 2022</param.summary>
    <param.description>This is the GUI application for Detect Module of our BNU-China team's iGEM project (still under internal tests). 
There are 3 adjustable properties and 4 control buttons. The former includes "THC start, s" (decide when THC is taken in), "THC end, s" (decide when THC is fully degraded) and "tmesh, s" (decide the total simulation time); the latter includes "Run" (start simulation), "Stop" (stop execution), "Save" (save variable "traj" locally) and "Clear" (clear the plot area, but won't clear the simulation result).
While it's only for the use of testing and debugging, there may be strange bugs like dt may be negative, causing an infinite loop, which is why I only setup a "Stop" button, not "Pause" and "Continue". Also, there are some user-friendly functions missing, like real-time plotting and more accurate simulation of THC deragrading (which I'm temporarily adopting a sudden change in related simulation parameters to represent), and I can't guarantee that they will come some time in the near future for time reasons. So... apologies.
The default value of the adjustable parameters are: 
THCstart = 21600s;
THCend = 43200s;
tmesh = 86400s;
**Please note that any parameter modification will take effect only if a new run of simmulation starts!! It won't take effect in the middle of he current simulation.</param.description>
    <param.screenshot>C:\Users\10630\Documents\MATLAB\splash.png</param.screenshot>
    <param.guid />
    <param.installpath.string>\detect_gui\</param.installpath.string>
    <param.installpath.combo>option.installpath.programfiles</param.installpath.combo>
    <param.logo />
    <param.install.notes />
    <param.target.install.notes />
    <param.intermediate>${PROJECT_ROOT}\detect_gui\for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}\detect_gui\for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}\detect_gui\for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}\detect_gui</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>MyAppInstaller_web</param.web.mcr.name>
    <param.package.mcr.name>MyAppInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>true</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	  -? 
	 
 Input Arguments 
	 -?  print help on how to use the application 
	 input arguments 
 Description 
 	 This is the GUI application for Detect Module of our BNU-China team's iGEM project (still under internal tests). 
There are 3 adjustable properties and 4 control buttons. The former includes "THC start, s" (decide when THC is taken in), "THC end, s" (decide when THC is fully degraded) and "tmesh, s" (decide the total simulation time); the latter includes "Run" (start simulation), "Stop" (stop execution), "Save" (save variable "traj" locally) and "Clear" (clear the plot area, but won't clear the simulation result).
While it's only for the use of testing and debugging, there may be strange bugs like dt may be negative, causing an infinite loop, which is why I only setup a "Stop" button, not "Pause" and "Continue". Also, there are some user-friendly functions missing, like real-time plotting and more accurate simulation of THC deragrading (which I'm temporarily adopting a sudden change in related simulation parameters to represent), and I can't guarantee that they will come some time in the near future for time reasons. So... apologies.
The default value of the adjustable parameters are: 
THCstart = 21600s;
THCend = 43200s;
tmesh = 86400s;
**Please note that any parameter modification will take effect only if a new run of simmulation starts!! It won't take effect in the middle of he current simulation.</param.help.text>
    <unset>
      <param.icon />
      <param.icons />
      <param.guid />
      <param.installpath.combo />
      <param.logo />
      <param.install.notes />
      <param.target.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.web.mcr.name />
      <param.package.mcr.name />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}\detect_gui.mlapp</file>
    </fileset.main>
    <fileset.resources />
    <fileset.package />
    <fileset.depfun>
      <file>${PROJECT_ROOT}\detect-stoch.mat</file>
      <file>C:\Users\10630\Documents\MATLAB\logo.jpg</file>
    </fileset.depfun>
    <build-deliverables>
      <file location="${PROJECT_ROOT}\detect_gui\for_testing" name="readme.txt" optional="true">C:\Users\10630\Documents\MATLAB\Detect\detect_gui\for_testing\readme.txt</file>
      <file location="${PROJECT_ROOT}\detect_gui\for_testing" name="splash.png" optional="false">C:\Users\10630\Documents\MATLAB\Detect\detect_gui\for_testing\splash.png</file>
      <file location="${PROJECT_ROOT}\detect_gui\for_testing" name="detect_gui.exe" optional="false">C:\Users\10630\Documents\MATLAB\Detect\detect_gui\for_testing\detect_gui.exe</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>D:\Program Files\MATLAB\R2022a</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.0</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>